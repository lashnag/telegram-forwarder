services:
  database:
    image: postgres:15
    container_name: forwarder_backend_database
    env_file:
      - .env
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 30s
      timeout: 10s
      retries: 5
  backend:
    image: lashnag/forwarder_backend_application:1.0.1
    container_name: forwarder_backend_application
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      database:
        condition: service_healthy
      logstash:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "-u", "${BACKEND_BASIC_AUTH_USER}:${BACKEND_BASIC_AUTH_PASSWORD}", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
  sender:
    image: lashnag/sender_api:1.0.0
    container_name: sender_api
    env_file:
      - .env
    depends_on:
      logstash:
        condition: service_healthy
    volumes:
      - ./mounted/sender_api:/sender_api/mounted
  lemmatizer:
    image: lashnag/lemmatizer:1.0.0
    container_name: lemmatizer
  ocr:
    image: lashnag/ocr:1.0.0
    container_name: ocr
  elasticsearch:
    image: elasticsearch:7.17.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=true
      - ELASTIC_USERNAME=${ELASTIC_USERNAME}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    volumes:
      - elastic_search_data:/usr/share/elasticsearch/data
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "curl", "-u", "${ELASTIC_USERNAME}:${ELASTIC_PASSWORD}", "http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=50s" ]
      interval: 30s
      timeout: 10s
      retries: 5
  logstash:
    image: logstash:7.17.0
    container_name: logstash
    environment:
      - XPACK_SECURITY_ENABLED=false
      - XPACK_MONITORING_ENABLED=false
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "curl", "--silent", "--fail", "http://localhost:9600/_node/stats" ]
      interval: 30s
      timeout: 10s
      retries: 5
  kibana:
    image: kibana:7.17.0
    container_name: kibana
    ports:
      - "${KIBANA_PORT}:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=${ELASTIC_USERNAME}
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
    env_file:
      - .env
volumes:
  postgres_data:
  elastic_search_data: